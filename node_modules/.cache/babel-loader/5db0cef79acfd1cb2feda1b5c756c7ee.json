{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\n\nconst useFetch = (url, filter, checkBoxState) => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const fetchItemsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const datas = await response.json();\n\n      if (filter !== \"\") {\n        setItems([]);\n        const newFilteredItems = datas.filter(data => {\n          return data.gender === filter;\n        }).map(data => {\n          return {\n            id: data.id,\n            title: data.title,\n            price: data.price,\n            description: data.description,\n            image: data.image,\n            gender: data.gender\n          };\n        });\n\n        if (checkBoxState && filteredItems > 0) {\n          setFilteredItems(filteredItems => {\n            return [...newFilteredItems, ...filteredItems];\n          });\n        } else {\n          let previousFilteredItems = [];\n\n          for (let i = 0; i < filteredItems.length; i++) {\n            previousFilteredItems = filteredItems.filter(item => {\n              return item.id !== newFilteredItems[i].id;\n            });\n          }\n\n          setFilteredItems(previousFilteredItems);\n          console.log(filteredItems);\n          console.log(newFilteredItems[0].id);\n          console.log(previousFilteredItems);\n        }\n      } else {\n        const transformedItems = datas.map(data => {\n          return {\n            id: data.id,\n            title: data.title,\n            price: data.price,\n            description: data.description,\n            image: data.image,\n            gender: data.gender\n          };\n        });\n        setItems(transformedItems);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, [url, filter, checkBoxState]);\n  useEffect(() => {\n    setItems(filteredItems);\n  }, [filteredItems]);\n  useEffect(() => {\n    fetchItemsHandler();\n  }, [fetchItemsHandler]);\n  return {\n    items,\n    error,\n    isLoading\n  };\n};\n\n_s(useFetch, \"JBNs+K/rnL6zF1rI6zw2kKke7EA=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useCallback","useFetch","url","filter","checkBoxState","items","setItems","isLoading","setIsLoading","error","setError","filteredItems","setFilteredItems","fetchItemsHandler","response","fetch","ok","Error","datas","json","newFilteredItems","data","gender","map","id","title","price","description","image","previousFilteredItems","i","length","item","console","log","transformedItems","message"],"sources":["C:/Users/hamzu/Desktop/React/React projects/reactStore/src/hooks/use-fecth.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst useFetch = (url, filter, checkBoxState) => {\r\n  const [items, setItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n\r\n  const fetchItemsHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const datas = await response.json();\r\n      if (filter !== \"\") {\r\n        setItems([]);\r\n        const newFilteredItems = datas\r\n          .filter((data) => {\r\n            return data.gender === filter;\r\n          })\r\n          .map((data) => {\r\n            return {\r\n              id: data.id,\r\n              title: data.title,\r\n              price: data.price,\r\n              description: data.description,\r\n              image: data.image,\r\n              gender: data.gender,\r\n            };\r\n          });\r\n        if (checkBoxState && filteredItems > 0) {\r\n          setFilteredItems((filteredItems) => {\r\n            return [...newFilteredItems, ...filteredItems];\r\n          });\r\n        } else {\r\n          let previousFilteredItems = [];\r\n          for (let i = 0; i < filteredItems.length; i++) {\r\n            previousFilteredItems = filteredItems.filter((item) => {\r\n              return item.id !== newFilteredItems[i].id;\r\n            });\r\n          }\r\n\r\n          setFilteredItems(previousFilteredItems);\r\n          console.log(filteredItems);\r\n          console.log(newFilteredItems[0].id);\r\n          console.log(previousFilteredItems);\r\n        }\r\n      } else {\r\n        const transformedItems = datas.map((data) => {\r\n          return {\r\n            id: data.id,\r\n            title: data.title,\r\n            price: data.price,\r\n            description: data.description,\r\n            image: data.image,\r\n            gender: data.gender,\r\n          };\r\n        });\r\n        setItems(transformedItems);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, [url, filter, checkBoxState]);\r\n\r\n  useEffect(() => {\r\n    setItems(filteredItems);\r\n  }, [filteredItems]);\r\n\r\n  useEffect(() => {\r\n    fetchItemsHandler();\r\n  }, [fetchItemsHandler]);\r\n\r\n  return { items, error, isLoading };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}